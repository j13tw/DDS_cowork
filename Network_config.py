import os, sys

class Ntp_config():
    def __init__(self):
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

class Net_config():
    def __init__(self):
        try:
            self.f = open('/etc/network/interfaces', 'r')
            print(self.f.read())
            self.f.close()
        except:
            self.f = open('/etc/network/interfaces', 'w')
            self.f.write('auto lo eth0\n\n')
            self.f.write('iface eth0 inet dhcp\n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('allow-hotplug eth1\n\n')
            self.f.write('iface eth1 inet dhcp\n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.write('                              \n')
            self.f.close()
            self.f = open('/etc/network/interfaces', 'r')
            print(self.f.read())
            self.f.close()

    def eth0_dhcp(self):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.write('auto lo eth0\n\n')
        self.f.write('iface eth0 inet dhcp\n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.close()
        os.system('sudo ifdown eth0')
        os.system('sudo ifup eth0')
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

    def eth1_dhcp(self):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(190)
        self.f.write('allow-hotplug eth1\n\n')
        self.f.write('iface eth1 inet dhcp\n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.close()
        os.system('lsusb | grep "Realtek" | cut -c16,17,18 >/tmp/usb.txt')
        self.usb_id = open('/tmp/usb.txt')
        self.usb_reset = 'sudo python ./Restusb.py -d ' + self.usb_id.read()
        os.system(self.usb_reset)
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

    def eth0_static(self, ip, netmask, gateway):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.write('auto lo eth0\n\n')
        self.f.write('iface eth0 inet static\n')
        self.f.write('address ')
        self.f.write(ip)
        self.f.write('\n')
        self.f.write('netmask ')
        self.f.write(netmask)
        self.f.write('\n')
        self.f.write('gateway ')
        self.f.write(gateway)
        self.f.write('\n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.close()
        os.system('sudo ifdown eth0')
        os.system('sudo ifup eth0')
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

    def eth1_static(self, ip, netmask, gateway):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(190)
        self.f.write('allow-hotplug eth1\n\n')
        self.f.write('iface eth1 inet static\n')
        self.f.write('address ')
        self.f.write(ip)
        self.f.write('\n')
        self.f.write('netmask ')
        self.f.write(netmask)
        self.f.write('\n')
        self.f.write('gateway ')
        self.f.write(gateway)
        self.f.write('\n')
        self.f.write('                              \n')
        self.f.write('                              \n')
        self.f.close()
        os.system('lsusb | grep "Realtek" | cut -c16,17,18 >/tmp/usb.txt')
        self.usb_id = open('/tmp/usb.txt')
        self.usb_reset = 'sudo python ./Restusb.py -d ' + self.usb_id.read()
        os.system(self.usb_reset)
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

    def eth0_dns(self, dns):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(101)
        self.f.write('dns-nameserver ')
        self.f.write(dns)
        self.f.write('\n')
        self.f.write('                              \n')
        os.system('sudo ifdown eth0')
        os.system('sudo ifup eth0')
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()

    def eth1_dns(self, dns):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(296)
        self.f.write('dns-nameserver ')
        self.f.write(dns)
        self.f.write('\n')
        self.f.write('                              \n')
        os.system('lsusb | grep "Realtek" | cut -c16,17,18 >/tmp/usb.txt')
        self.usb_id = open('/tmp/usb.txt')
        self.usb_reset = 'sudo python ./Restusb.py -d ' + self.usb_id.read()
        os.system(self.usb_reset)
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()
    
    def eth0_dual_dns(self, dns, sub_dns):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(101)
        self.f.write('dns-nameserver ')
        self.f.write(dns)
        self.f.write('\n')
        self.f.write('dns-nameserver ')
        self.f.write(sub_dns)
        self.f.write('\n')
        os.system('sudo ifdown eth0')
        os.system('sudo ifup eth0')
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()
    
    def eth1_dual_dns(self, dns, sub_dns):
        self.f = open('/etc/network/interfaces', 'r+')
        self.f.seek(296)
        self.f.write('dns-nameserver ')
        self.f.write(dns)
        self.f.write('\n')
        self.f.write('dns-nameserver ')
        self.f.write(sub_dns)
        self.f.write('\n')
        os.system('lsusb | grep "Realtek" | cut -c16,17,18 >/tmp/usb.txt')
        self.usb_id = open('/tmp/usb.txt')
        self.usb_reset = 'sudo python ./Restusb.py -d ' + self.usb_id.read()
        os.system(self.usb_reset)
        self.f = open('/etc/network/interfaces', 'r')
        print(self.f.read())
        self.f.close()